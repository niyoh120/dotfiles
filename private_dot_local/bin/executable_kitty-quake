#!/bin/bash

# WINDOW风格的kitty窗口
function kitty_WINDOW() {
  BIN_PATH=/usr/local/bin
  WINDOW=($($BIN_PATH/yabai -m query --windows --space |jq '.[]|select(.title=="WINDOW")|.id,."is-minimized",."has-border",."has-focus"'))
  
  # 没有则创建一个新窗口
  if [[ ${#WINDOW} -eq 0 ]]; then
    open -a kitty.app -n --args -1 --instance-group WINDOW --title WINDOW -o \
      tab_title_template="WINDOW: {index}" \
      &>/dev/null & disown 
    while [[ ${#WINDOW[@]} -ne 4 ]]
      do
        WINDOW=($($BIN_PATH/yabai -m query --windows --space |jq '.[]|select(.title=="WINDOW")|.id,."is-minimized",."has-border",."has-focus"'))
      done
    $BIN_PATH/yabai -m window "${WINDOW[0]}" --toggle sticky
    $BIN_PATH/yabai -m window "${WINDOW[0]}" --move abs:0:0
    $BIN_PATH/yabai -m window "${WINDOW[0]}" --resize abs:10000:450
    $BIN_PATH/yabai -m window "${WINDOW[0]}" --opacity 0.65
  # 焦点不在窗口上, 则切换焦点至窗口
  elif [[ ${WINDOW[3]} == false ]]; then
    [[ ${WINDOW[1]} == true ]] && ($BIN_PATH/yabai -m window "${WINDOW[0]}" --deminimize || :)
    $BIN_PATH/yabai -m window "${WINDOW[0]}" --move abs:0:0
    $BIN_PATH/yabai -m window "${WINDOW[0]}" --resize abs:10000:450
    $BIN_PATH/yabai -m window "${WINDOW[0]}" --opacity 0.65
    $BIN_PATH/yabai -m window "${WINDOW[0]}" --focus "${WINDOW[0]}"
    [[ ${WINDOW[2]} == false ]] && ($BIN_PATH/yabai -m window "${WINDOW[0]}" --toggle border || :)
  # 焦点在窗口上
  elif [[ ${WINDOW[3]} == true ]]; then
    [[ ${WINDOW[2]} == false ]] && ($BIN_PATH/yabai -m window "${WINDOW[0]}" --toggle border || :)
    # 窗口没有最小化, 则最小化, 否则恢复
    if [[ ${WINDOW[1]} == false ]]; then
      $BIN_PATH/yabai -m window "${WINDOW[0]}" --opacity 0.001
      $BIN_PATH/yabai -m window "${WINDOW[0]}" --minimize
    else
      $BIN_PATH/yabai -m window "${WINDOW[0]}" --deminimize
      $BIN_PATH/yabai -m window "${WINDOW[0]}" --move abs:0:0
      $BIN_PATH/yabai -m window "${WINDOW[0]}" --resize abs:10000:450
      $BIN_PATH/yabai -m window "${WINDOW[0]}" --opacity 0.65
      $BIN_PATH/yabai -m window "${WINDOW[0]}" --focus "${WINDOW[0]}"
    fi
  else
    echo WINDOW failed
  fi
}

kitty_WINDOW